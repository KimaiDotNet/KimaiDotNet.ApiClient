// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace MarkZither.KimaiDotNet.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class BodyModel
    {
        /// <summary>
        /// Initializes a new instance of the BodyModel class.
        /// </summary>
        public BodyModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BodyModel class.
        /// </summary>
        /// <param name="copy">Whether data should be copied to the new entry.
        /// Allowed values: all, tags, rates, description, meta (default:
        /// nothing is copied)</param>
        /// <param name="begin">Changes the restart date to the given one
        /// (default: now)</param>
        public BodyModel(string copy = default(string), string begin = default(string))
        {
            Copy = copy;
            Begin = begin;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets whether data should be copied to the new entry.
        /// Allowed values: all, tags, rates, description, meta (default:
        /// nothing is copied)
        /// </summary>
        [JsonProperty(PropertyName = "copy")]
        public string Copy { get; set; }

        /// <summary>
        /// Gets or sets changes the restart date to the given one (default:
        /// now)
        /// </summary>
        [JsonProperty(PropertyName = "begin")]
        public string Begin { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Copy != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(Copy, "all|tags|rates|meta|description"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "Copy", "all|tags|rates|meta|description");
                }
            }
        }
    }
}
