// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace MarkZither.KimaiDotNet.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ActivityEditForm
    {
        /// <summary>
        /// Initializes a new instance of the ActivityEditForm class.
        /// </summary>
        public ActivityEditForm()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ActivityEditForm class.
        /// </summary>
        /// <param name="project">Project ID</param>
        /// <param name="color">The hexadecimal color code (default:
        /// #d2d6de)</param>
        public ActivityEditForm(string name, string comment = default(string), int? project = default(int?), string color = default(string), bool? visible = default(bool?))
        {
            Name = name;
            Comment = comment;
            Project = project;
            Color = color;
            Visible = visible;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "comment")]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or sets project ID
        /// </summary>
        [JsonProperty(PropertyName = "project")]
        public int? Project { get; set; }

        /// <summary>
        /// Gets or sets the hexadecimal color code (default: #d2d6de)
        /// </summary>
        [JsonProperty(PropertyName = "color")]
        public string Color { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "visible")]
        public bool? Visible { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
