// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace MarkZither.KimaiDotNet.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CustomerEditForm
    {
        /// <summary>
        /// Initializes a new instance of the CustomerEditForm class.
        /// </summary>
        public CustomerEditForm()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomerEditForm class.
        /// </summary>
        /// <param name="color">The hexadecimal color code (default:
        /// #d2d6de)</param>
        public CustomerEditForm(string name, string country, string currency, string timezone, string number = default(string), string comment = default(string), string company = default(string), string vatId = default(string), string contact = default(string), string address = default(string), string phone = default(string), string fax = default(string), string mobile = default(string), string email = default(string), string homepage = default(string), string color = default(string), bool? visible = default(bool?))
        {
            Name = name;
            Number = number;
            Comment = comment;
            Company = company;
            VatId = vatId;
            Contact = contact;
            Address = address;
            Country = country;
            Currency = currency;
            Phone = phone;
            Fax = fax;
            Mobile = mobile;
            Email = email;
            Homepage = homepage;
            Timezone = timezone;
            Color = color;
            Visible = visible;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "number")]
        public string Number { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "comment")]
        public string Comment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "company")]
        public string Company { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatId")]
        public string VatId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contact")]
        public string Contact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        public string Address { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public string Currency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "phone")]
        public string Phone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fax")]
        public string Fax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mobile")]
        public string Mobile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "homepage")]
        public string Homepage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timezone")]
        public string Timezone { get; set; }

        /// <summary>
        /// Gets or sets the hexadecimal color code (default: #d2d6de)
        /// </summary>
        [JsonProperty(PropertyName = "color")]
        public string Color { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "visible")]
        public bool? Visible { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Country == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Country");
            }
            if (Currency == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Currency");
            }
            if (Timezone == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Timezone");
            }
        }
    }
}
