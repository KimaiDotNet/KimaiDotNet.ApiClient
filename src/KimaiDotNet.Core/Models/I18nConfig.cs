// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace MarkZither.KimaiDotNet.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class I18nConfig
    {
        /// <summary>
        /// Initializes a new instance of the I18nConfig class.
        /// </summary>
        public I18nConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the I18nConfig class.
        /// </summary>
        /// <param name="formDateTime">Format used for 'begin' and
        /// 'end'</param>
        /// <param name="formDate">Format used for toolbar queries</param>
        /// <param name="dateTime">Format used to display date-time values (see
        /// PHP function date_format)</param>
        /// <param name="date">Format used to display date values (see PHP
        /// function date_format)</param>
        /// <param name="time">Format used to display times (see PHP function
        /// date_format)</param>
        /// <param name="duration">Format used to display durations (replace:
        /// %h with hours, %m with minutes, %s with seconds)</param>
        /// <param name="is24hours">Whether a twenty-four hour format is used
        /// (true) or 12-hours AM/PM format (false)</param>
        /// <param name="now">The current time of the user</param>
        public I18nConfig(string formDateTime = default(string), string formDate = default(string), string dateTime = default(string), string date = default(string), string time = default(string), string duration = default(string), bool? is24hours = default(bool?), System.DateTime? now = default(System.DateTime?))
        {
            FormDateTime = formDateTime;
            FormDate = formDate;
            DateTime = dateTime;
            Date = date;
            Time = time;
            Duration = duration;
            Is24hours = is24hours;
            Now = now;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets format used for 'begin' and 'end'
        /// </summary>
        [JsonProperty(PropertyName = "formDateTime")]
        public string FormDateTime { get; set; }

        /// <summary>
        /// Gets or sets format used for toolbar queries
        /// </summary>
        [JsonProperty(PropertyName = "formDate")]
        public string FormDate { get; set; }

        /// <summary>
        /// Gets or sets format used to display date-time values (see PHP
        /// function date_format)
        /// </summary>
        [JsonProperty(PropertyName = "dateTime")]
        public string DateTime { get; set; }

        /// <summary>
        /// Gets or sets format used to display date values (see PHP function
        /// date_format)
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public string Date { get; set; }

        /// <summary>
        /// Gets or sets format used to display times (see PHP function
        /// date_format)
        /// </summary>
        [JsonProperty(PropertyName = "time")]
        public string Time { get; set; }

        /// <summary>
        /// Gets or sets format used to display durations (replace: %h with
        /// hours, %m with minutes, %s with seconds)
        /// </summary>
        [JsonProperty(PropertyName = "duration")]
        public string Duration { get; set; }

        /// <summary>
        /// Gets or sets whether a twenty-four hour format is used (true) or
        /// 12-hours AM/PM format (false)
        /// </summary>
        [JsonProperty(PropertyName = "is24hours")]
        public bool? Is24hours { get; set; }

        /// <summary>
        /// Gets or sets the current time of the user
        /// </summary>
        [JsonProperty(PropertyName = "now")]
        public System.DateTime? Now { get; set; }

    }
}
